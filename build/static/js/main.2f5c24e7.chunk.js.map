{"version":3,"sources":["Pagination/PaginationComponent.js","Pagination/index.js","App.js","index.js"],"names":["PaginationComponent","props","_this","Object","classCallCheck","this","_super","call","componentDidMount","nextProps","setState","totalRecords","handlePageChange","page","activePage","getAllData","componentWillReceiveProps","state","limit","_this$state","react_default","a","createElement","className","style","marginLeft","Pagination_default","aria-label","itemClass","linkClass","prevPageText","nextPageText","firstPageText","lastPageText","itemsCountPerPage","totalItemsCount","onChange","Component","Pagination","data","loadData","axios","get","then","res","total","per_page","getPaginatedData","length","map","item","index","scope","id","height","borderRadius","src","avatar","first_name","last_name","email","Pagination_PaginationComponent","App","src_Pagination","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f5c24e7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PaginationComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalRecords: 0,\r\n      activePage: 1,\r\n      limit: 6\r\n    };\r\n  }\r\n  //Handle total records if comes\r\n  componentDidMount = nextProps => {\r\n    this.setState({\r\n      totalRecords: nextProps ? nextProps.totalRecords : this.props.totalRecords\r\n    });\r\n  };\r\n\r\n  //Handle Page Change\r\n  handlePageChange = page => {\r\n    this.setState({\r\n      activePage: page\r\n    });\r\n    this.props.getAllData(page);\r\n  };\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    this.componentDidMount(nextProps);\r\n  };\r\n\r\n  //Return pagination UI\r\n  render() {\r\n    let { activePage, limit, totalRecords } = this.state;\r\n    return (\r\n      <div className=\"pagination-wrapper\" style={{ marginLeft: \"30%\" }}>\r\n        <Pagination\r\n          aria-label=\"Page navigation example\"\r\n          itemClass=\"page-item\"\r\n          linkClass=\"page-link\"\r\n          prevPageText=\"Prev\"\r\n          nextPageText=\"Next\"\r\n          firstPageText=\"First\"\r\n          lastPageText=\"Last\"\r\n          activePage={activePage}\r\n          itemsCountPerPage={limit}\r\n          totalItemsCount={totalRecords}\r\n          onChange={this.handlePageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n  totalRecords: PropTypes.any,\r\n  limit: PropTypes.any,\r\n  activePage: PropTypes.any,\r\n  getAllData: PropTypes.any\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport PaginationComponent from \"./PaginationComponent\";\r\n\r\nclass Pagination extends Component {\r\n    state = {\r\n        data: [],\r\n        totalRecords:0,\r\n        limit: 6\r\n    }\r\n    componentDidMount(){\r\n        this.loadData(1);\r\n    }\r\n    loadData = (page) =>{\r\n\r\n        axios\r\n            .get(`https://reqres.in/api/users?page=`+page)\r\n            .then(res => {\r\n\r\n                const data = res.data;\r\n                \r\n                this.setState({\r\n                    data: data.data,\r\n                    totalRecords : data.total ? data.total : 0,\r\n                    limit : data.per_page ? data.per_page : 6\r\n                })\r\n            });\r\n    }\r\n    getPaginatedData = page =>{\r\n        this.loadData(page);\r\n    }\r\n    render(){\r\n        const { data, totalRecords, limit } = this.state;\r\n        return(\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th className=\"align-middle bt-0 bg-info text-light border border-light text-center\">Id</th>\r\n                            <th className=\"align-middle bt-0 bg-info text-light border border-light text-center\">Avatar</th>\r\n                            <th className=\"align-middle bt-0 bg-info text-light border border-light text-center\">Name</th>\r\n                            <th className=\"align-middle bt-0 bg-info text-light border border-light text-center\">Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data && data.length > 0 ?\r\n                            data.map((item,index)=>(\r\n                                <tr>\r\n                                    <td scope=\"col \"className='text-center'>{item.id}</td>\r\n                                    <td scope=\"col\" className='text-center'><img style={{height:\"50%\",borderRadius:100}} src={item.avatar}></img></td>\r\n                                    <td scope=\"col\" className='text-center'>{item.first_name} {item.last_name}</td>\r\n                                    <td scope=\"col\" className='text-center'>{item.email}</td>\r\n                                </tr>\r\n                            )) :\r\n                            <h4>No Data Found!!</h4>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                {totalRecords > 6 &&\r\n                    <PaginationComponent\r\n                        getAllData={this.getPaginatedData} \r\n                        totalRecords={totalRecords}\r\n                        itemsCountPerPage = {limit} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\nimport \"./styles.css\";\nimport Pagination from \"./Pagination\";\n\nexport default function App() {\n  return <Pagination />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}